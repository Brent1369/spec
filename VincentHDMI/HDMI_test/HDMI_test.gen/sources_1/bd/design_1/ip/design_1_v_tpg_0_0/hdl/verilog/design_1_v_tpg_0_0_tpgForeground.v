// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_tpg_0_0_tpgForeground (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        bckgndYUV_dout,
        bckgndYUV_empty_n,
        bckgndYUV_read,
        height,
        width,
        ovrlayId,
        maskId,
        colorFormat,
        crossHairX,
        crossHairY,
        boxSize,
        boxColorR,
        boxColorG,
        boxColorB,
        motionSpeed,
        ovrlayYUV_din,
        ovrlayYUV_full_n,
        ovrlayYUV_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [23:0] bckgndYUV_dout;
input   bckgndYUV_empty_n;
output   bckgndYUV_read;
input  [15:0] height;
input  [15:0] width;
input  [7:0] ovrlayId;
input  [7:0] maskId;
input  [7:0] colorFormat;
input  [15:0] crossHairX;
input  [15:0] crossHairY;
input  [15:0] boxSize;
input  [15:0] boxColorR;
input  [15:0] boxColorG;
input  [15:0] boxColorB;
input  [7:0] motionSpeed;
output  [23:0] ovrlayYUV_din;
input   ovrlayYUV_full_n;
output   ovrlayYUV_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg bckgndYUV_read;
reg ovrlayYUV_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [15:0] boxHCoord;
reg   [15:0] boxVCoord;
wire   [0:0] cmp11_i185_fu_230_p2;
wire   [0:0] cmp13_i_fu_244_p2;
reg   [15:0] y_1_reg_518;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1918_fu_378_p2;
reg   [0:0] icmp_ln1918_reg_526;
wire   [0:0] icmp_ln727_fu_367_p2;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_start;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_done;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_idle;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_ready;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_bckgndYUV_read;
wire   [23:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ovrlayYUV_din;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ovrlayYUV_write;
wire   [7:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_conv_i4_i;
wire   [7:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_conv_i_i187;
wire   [7:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_conv_i_i;
wire   [0:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_and4_i;
wire   [0:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_and24_i;
wire   [0:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_tobool;
wire   [0:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_and10_i;
wire   [15:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_vMax;
wire   [15:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_hMax;
wire   [8:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_zext_ln1869_1;
wire   [0:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_cmp72_i;
wire   [7:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxColorG_1;
wire   [1:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_select_ln1930_1;
wire   [15:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord_loc_1_out_o;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord_loc_1_out_o_ap_vld;
wire   [15:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord_loc_1_out_o;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord_loc_1_out_o_ap_vld;
wire   [15:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord_ap_vld;
wire   [15:0] grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord_ap_vld;
reg    grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_start_reg;
wire    ap_CS_fsm_state3;
reg   [15:0] boxHCoord_loc_0_fu_102;
reg   [15:0] boxVCoord_loc_0_fu_98;
reg   [15:0] y_fu_94;
wire   [15:0] y_2_fu_372_p2;
reg    ap_block_state1;
wire   [0:0] empty_59_fu_262_p1;
wire   [0:0] tmp_fu_272_p3;
wire   [0:0] tmp_2_fu_286_p3;
wire   [6:0] tmp_3_fu_304_p4;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 boxHCoord = 16'd0;
#0 boxVCoord = 16'd0;
#0 grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_start_reg = 1'b0;
end

design_1_v_tpg_0_0_tpgForeground_Pipeline_VITIS_LOOP_729_2 grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_start),
    .ap_done(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_done),
    .ap_idle(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_idle),
    .ap_ready(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_ready),
    .bckgndYUV_dout(bckgndYUV_dout),
    .bckgndYUV_empty_n(bckgndYUV_empty_n),
    .bckgndYUV_read(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_bckgndYUV_read),
    .ovrlayYUV_din(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ovrlayYUV_din),
    .ovrlayYUV_full_n(ovrlayYUV_full_n),
    .ovrlayYUV_write(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ovrlayYUV_write),
    .loopWidth(width),
    .conv_i4_i(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_conv_i4_i),
    .conv_i_i187(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_conv_i_i187),
    .conv_i_i(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_conv_i_i),
    .and4_i(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_and4_i),
    .and24_i(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_and24_i),
    .tobool(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_tobool),
    .and10_i(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_and10_i),
    .ovrlayId_load(ovrlayId),
    .boxSize_1(boxSize),
    .y(y_1_reg_518),
    .zext_ln1869(motionSpeed),
    .vMax(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_vMax),
    .hMax(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_hMax),
    .zext_ln1869_1(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_zext_ln1869_1),
    .cmp72_i(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_cmp72_i),
    .boxColorG_1(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxColorG_1),
    .crossHairX_1(crossHairX),
    .icmp_ln1918(icmp_ln1918_reg_526),
    .cmp11_i185(cmp11_i185_fu_230_p2),
    .cmp13_i(cmp13_i_fu_244_p2),
    .select_ln1930_1(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_select_ln1930_1),
    .boxHCoord_loc_1_out_i(boxHCoord_loc_0_fu_102),
    .boxHCoord_loc_1_out_o(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord_loc_1_out_o),
    .boxHCoord_loc_1_out_o_ap_vld(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord_loc_1_out_o_ap_vld),
    .boxVCoord_loc_1_out_i(boxVCoord_loc_0_fu_98),
    .boxVCoord_loc_1_out_o(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord_loc_1_out_o),
    .boxVCoord_loc_1_out_o_ap_vld(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord_loc_1_out_o_ap_vld),
    .boxHCoord(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord),
    .boxHCoord_ap_vld(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord_ap_vld),
    .boxVCoord(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord),
    .boxVCoord_ap_vld(grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln727_fu_367_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln727_fu_367_p2 == 1'd0))) begin
            grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_start_reg <= 1'b1;
        end else if ((grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_ready == 1'b1)) begin
            grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        boxHCoord_loc_0_fu_102 <= boxHCoord;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord_loc_1_out_o_ap_vld == 1'b1))) begin
        boxHCoord_loc_0_fu_102 <= grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord_loc_1_out_o;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        boxVCoord_loc_0_fu_98 <= boxVCoord;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord_loc_1_out_o_ap_vld == 1'b1))) begin
        boxVCoord_loc_0_fu_98 <= grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord_loc_1_out_o;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_fu_94 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln727_fu_367_p2 == 1'd0))) begin
        y_fu_94 <= y_2_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord_ap_vld == 1'b1))) begin
        boxHCoord <= grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxHCoord;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord_ap_vld == 1'b1))) begin
        boxVCoord <= grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxVCoord;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln727_fu_367_p2 == 1'd0))) begin
        icmp_ln1918_reg_526 <= icmp_ln1918_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_1_reg_518 <= y_fu_94;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln727_fu_367_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bckgndYUV_read = grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_bckgndYUV_read;
    end else begin
        bckgndYUV_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln727_fu_367_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ovrlayYUV_write = grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ovrlayYUV_write;
    end else begin
        ovrlayYUV_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln727_fu_367_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign cmp11_i185_fu_230_p2 = ((colorFormat == 8'd0) ? 1'b1 : 1'b0);

assign cmp13_i_fu_244_p2 = ((colorFormat == 8'd1) ? 1'b1 : 1'b0);

assign empty_59_fu_262_p1 = maskId[0:0];

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_and10_i = (tmp_fu_272_p3 & cmp11_i185_fu_230_p2);

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_and24_i = (tmp_2_fu_286_p3 & cmp11_i185_fu_230_p2);

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_and4_i = (empty_59_fu_262_p1 & cmp11_i185_fu_230_p2);

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_start = grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ap_start_reg;

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_boxColorG_1 = boxColorG[7:0];

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_cmp72_i = ((tmp_3_fu_304_p4 != 7'd0) ? 1'b1 : 1'b0);

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_conv_i4_i = boxColorB[7:0];

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_conv_i_i = boxColorR[7:0];

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_conv_i_i187 = ((cmp11_i185_fu_230_p2[0:0] == 1'b1) ? 8'd240 : 8'd128);

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_hMax = (width - boxSize);

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_select_ln1930_1 = ((cmp13_i_fu_244_p2[0:0] == 1'b1) ? 2'd1 : 2'd2);

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_tobool = ((maskId == 8'd0) ? 1'b1 : 1'b0);

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_vMax = (height - boxSize);

assign grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_zext_ln1869_1 = {{motionSpeed}, {1'd0}};

assign icmp_ln1918_fu_378_p2 = ((y_fu_94 != crossHairY) ? 1'b1 : 1'b0);

assign icmp_ln727_fu_367_p2 = ((y_fu_94 == height) ? 1'b1 : 1'b0);

assign ovrlayYUV_din = grp_tpgForeground_Pipeline_VITIS_LOOP_729_2_fu_178_ovrlayYUV_din;

assign start_out = real_start;

assign tmp_2_fu_286_p3 = maskId[32'd2];

assign tmp_3_fu_304_p4 = {{colorFormat[7:1]}};

assign tmp_fu_272_p3 = maskId[32'd1];

assign y_2_fu_372_p2 = (y_fu_94 + 16'd1);

endmodule //design_1_v_tpg_0_0_tpgForeground
