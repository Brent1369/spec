// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_tpg_0_0_tpgPatternCrossHatch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        y,
        x,
        width,
        height,
        color,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] y;
input  [15:0] x;
input  [15:0] width;
input  [15:0] height;
input  [7:0] color;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
reg   [9:0] yCount_V_2;
reg   [0:0] vHatch;
reg   [9:0] xCount_V_2;
wire   [1:0] whiYuv_1_address0;
reg    whiYuv_1_ce0;
wire   [7:0] whiYuv_1_q0;
wire   [1:0] blkYuv_1_address0;
reg    blkYuv_1_ce0;
wire   [7:0] blkYuv_1_q0;
reg   [0:0] empty_reg_131;
wire   [0:0] icmp_ln1404_fu_248_p2;
reg   [0:0] icmp_ln1404_reg_537;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1404_reg_537_pp0_iter1_reg;
wire   [0:0] trunc_ln1404_fu_254_p1;
reg   [0:0] trunc_ln1404_reg_541;
reg   [0:0] trunc_ln1404_reg_541_pp0_iter1_reg;
wire   [0:0] icmp_ln1404_1_fu_262_p2;
reg   [0:0] icmp_ln1404_1_reg_547;
reg   [0:0] icmp_ln1404_1_reg_547_pp0_iter1_reg;
reg   [0:0] icmp_ln1404_1_reg_547_pp0_iter2_reg;
wire   [0:0] and_ln1404_fu_280_p2;
reg   [0:0] and_ln1404_reg_552;
reg   [0:0] and_ln1404_reg_552_pp0_iter1_reg;
wire   [9:0] tmp_fu_286_p4;
wire   [0:0] cmp57_fu_308_p2;
wire   [0:0] cmp59_fu_314_p2;
wire   [0:0] icmp_ln1428_fu_320_p2;
reg   [0:0] icmp_ln1428_reg_575;
reg   [0:0] icmp_ln1428_reg_575_pp0_iter1_reg;
reg   [0:0] icmp_ln1428_reg_575_pp0_iter2_reg;
wire   [0:0] icmp_ln1072_fu_406_p2;
reg   [0:0] icmp_ln1072_reg_582;
reg   [0:0] icmp_ln1072_reg_582_pp0_iter2_reg;
wire   [0:0] icmp_ln1064_1_fu_412_p2;
reg   [0:0] icmp_ln1064_1_reg_586;
reg   [0:0] icmp_ln1064_1_reg_586_pp0_iter2_reg;
wire   [7:0] conv_i10_fu_449_p3;
wire   [7:0] conv_i_fu_456_p3;
reg   [0:0] ap_phi_mux_empty_phi_fu_135_p4;
wire   [9:0] grp_reg_ap_uint_10_s_fu_224_d;
wire   [9:0] grp_reg_ap_uint_10_s_fu_224_ap_return;
reg    grp_reg_ap_uint_10_s_fu_224_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call10;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call10;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call10;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call10;
wire    ap_block_pp0_stage0_11001_ignoreCallOp15;
reg   [9:0] ap_phi_mux_storemerge_phi_fu_125_p4;
wire   [9:0] sub_ln886_fu_418_p2;
wire   [9:0] ap_phi_reg_pp0_iter1_storemerge_reg_122;
wire   [9:0] add_ln885_3_fu_431_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_empty_reg_131;
reg   [0:0] ap_phi_reg_pp0_iter1_empty_reg_131;
reg   [0:0] ap_phi_reg_pp0_iter2_empty_reg_131;
reg   [0:0] ap_phi_mux_agg_result_0_0_phi_fu_148_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_agg_result_0_0_reg_143;
reg   [0:0] ap_phi_reg_pp0_iter1_agg_result_0_0_reg_143;
reg   [0:0] ap_phi_reg_pp0_iter2_agg_result_0_0_reg_143;
reg   [0:0] ap_phi_reg_pp0_iter3_agg_result_0_0_reg_143;
reg   [7:0] ap_phi_mux_pix_val_V_phi_fu_167_p8;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_reg_162;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_reg_162;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_reg_162;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_reg_162;
reg   [7:0] ap_phi_mux_pix_val_V_8_phi_fu_184_p8;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_8_reg_181;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_8_reg_181;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_8_reg_181;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_8_reg_181;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1474_fu_482_p1;
wire   [63:0] zext_ln1459_fu_506_p1;
wire   [9:0] add_ln885_fu_366_p2;
wire   [0:0] and_ln1409_fu_361_p2;
wire   [13:0] trunc_ln1396_fu_198_p1;
wire   [13:0] add_ln1396_fu_202_p2;
wire   [9:0] trunc_ln_fu_208_p4;
wire   [13:0] trunc_ln1398_fu_234_p1;
wire   [16:0] zext_ln1398_fu_230_p1;
wire   [16:0] zext_ln1404_fu_244_p1;
wire   [16:0] add_ln1404_fu_268_p2;
wire   [0:0] icmp_ln1404_2_fu_274_p2;
wire   [13:0] add_ln1398_fu_238_p2;
wire   [16:0] zext_ln1396_fu_194_p1;
wire   [16:0] zext_ln1404_1_fu_258_p1;
wire   [16:0] sub29_fu_302_p2;
wire   [10:0] zext_ln1541_fu_338_p1;
wire   [10:0] zext_ln1064_fu_351_p1;
wire   [10:0] ret_fu_341_p2;
wire   [0:0] icmp_ln1064_fu_355_p2;
wire   [0:0] or_ln1474_fu_470_p2;
wire   [1:0] select_ln1474_1_fu_463_p3;
wire   [1:0] select_ln1474_fu_474_p3;
wire   [0:0] or_ln1459_fu_494_p2;
wire   [1:0] select_ln1459_1_fu_487_p3;
wire   [1:0] select_ln1459_fu_498_p3;
wire   [7:0] select_ln1472_fu_511_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_228;
reg    ap_condition_222;
reg    ap_condition_253;
reg    ap_condition_274;
reg    ap_condition_232;
reg    ap_condition_239;
reg    ap_condition_599;
reg    ap_condition_602;
reg    ap_condition_606;
reg    ap_condition_93;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 yCount_V_2 = 10'd0;
#0 vHatch = 1'd0;
#0 xCount_V_2 = 10'd0;
end

design_1_v_tpg_0_0_tpgPatternCrossHatch_whiYuv_1_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
whiYuv_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(whiYuv_1_address0),
    .ce0(whiYuv_1_ce0),
    .q0(whiYuv_1_q0)
);

design_1_v_tpg_0_0_tpgPatternCrossHatch_blkYuv_1_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
blkYuv_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(blkYuv_1_address0),
    .ce0(blkYuv_1_ce0),
    .q0(blkYuv_1_q0)
);

design_1_v_tpg_0_0_reg_ap_uint_10_s grp_reg_ap_uint_10_s_fu_224(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .d(grp_reg_ap_uint_10_s_fu_224_d),
    .ap_return(grp_reg_ap_uint_10_s_fu_224_ap_return),
    .ap_ce(grp_reg_ap_uint_10_s_fu_224_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_222)) begin
        if ((1'b1 == ap_condition_228)) begin
            ap_phi_reg_pp0_iter1_empty_reg_131 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_reg_131 <= ap_phi_reg_pp0_iter0_empty_reg_131;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_232)) begin
        if ((1'b1 == ap_condition_274)) begin
            ap_phi_reg_pp0_iter3_agg_result_0_0_reg_143 <= 1'd0;
        end else if ((1'b1 == ap_condition_253)) begin
            ap_phi_reg_pp0_iter3_agg_result_0_0_reg_143 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_agg_result_0_0_reg_143 <= ap_phi_reg_pp0_iter2_agg_result_0_0_reg_143;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_232)) begin
        if ((1'b1 == ap_condition_274)) begin
            ap_phi_reg_pp0_iter3_pix_val_V_8_reg_181 <= conv_i_fu_456_p3;
        end else if ((1'b1 == ap_condition_253)) begin
            ap_phi_reg_pp0_iter3_pix_val_V_8_reg_181 <= conv_i10_fu_449_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_pix_val_V_8_reg_181 <= ap_phi_reg_pp0_iter2_pix_val_V_8_reg_181;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_232)) begin
        if ((1'b1 == ap_condition_274)) begin
            ap_phi_reg_pp0_iter3_pix_val_V_reg_162 <= 8'd0;
        end else if ((1'b1 == ap_condition_253)) begin
            ap_phi_reg_pp0_iter3_pix_val_V_reg_162 <= 8'd255;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_pix_val_V_reg_162 <= ap_phi_reg_pp0_iter2_pix_val_V_reg_162;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_232)) begin
        if ((1'b1 == ap_condition_239)) begin
            empty_reg_131 <= vHatch;
        end else if ((1'b1 == 1'b1)) begin
            empty_reg_131 <= ap_phi_reg_pp0_iter2_empty_reg_131;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln1404_reg_537 == 1'd1) & (icmp_ln1404_1_reg_547 == 1'd1)) | ((icmp_ln1404_reg_537 == 1'd0) & (1'd1 == and_ln1404_reg_552)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln1404_reg_537 == 1'd1) & (1'd1 == and_ln1409_fu_361_p2) & (icmp_ln1404_1_reg_547 == 1'd0)) | ((icmp_ln1404_reg_537 == 1'd0) & (1'd0 == and_ln1404_reg_552) & (1'd1 == and_ln1409_fu_361_p2)))))) begin
        vHatch <= 1'd1;
    end else if (((icmp_ln1404_reg_537 == 1'd0) & (1'd0 == and_ln1409_fu_361_p2) & (1'd0 == and_ln1404_reg_552) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1404_1_reg_547 == 1'd1))) begin
        vHatch <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_93)) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1404_1_fu_262_p2 == 1'd1))) begin
            xCount_V_2 <= 10'd0;
        end else if ((1'b1 == ap_condition_606)) begin
            xCount_V_2 <= 10'd0;
        end else if ((1'b1 == ap_condition_602)) begin
            xCount_V_2 <= ap_phi_mux_storemerge_phi_fu_125_p4;
        end else if ((1'b1 == ap_condition_599)) begin
            xCount_V_2 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln1404_fu_248_p2 == 1'd1) & (icmp_ln1404_1_fu_262_p2 == 1'd1)) | ((icmp_ln1404_fu_248_p2 == 1'd0) & (1'd1 == and_ln1404_fu_280_p2)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln1404_reg_537 == 1'd1) & (1'd1 == and_ln1409_fu_361_p2) & (icmp_ln1404_1_reg_547 == 1'd0)) | ((icmp_ln1404_reg_537 == 1'd0) & (1'd0 == and_ln1404_reg_552) & (1'd1 == and_ln1409_fu_361_p2)))))) begin
        yCount_V_2 <= 10'd0;
    end else if (((icmp_ln1404_reg_537 == 1'd0) & (1'd0 == and_ln1409_fu_361_p2) & (1'd0 == and_ln1404_reg_552) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1404_1_reg_547 == 1'd1))) begin
        yCount_V_2 <= add_ln885_fu_366_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1404_fu_248_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln1404_reg_552 <= and_ln1404_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln1404_reg_552_pp0_iter1_reg <= and_ln1404_reg_552;
        icmp_ln1404_1_reg_547 <= icmp_ln1404_1_fu_262_p2;
        icmp_ln1404_1_reg_547_pp0_iter1_reg <= icmp_ln1404_1_reg_547;
        icmp_ln1404_reg_537 <= icmp_ln1404_fu_248_p2;
        icmp_ln1404_reg_537_pp0_iter1_reg <= icmp_ln1404_reg_537;
        icmp_ln1428_reg_575_pp0_iter1_reg <= icmp_ln1428_reg_575;
        trunc_ln1404_reg_541 <= trunc_ln1404_fu_254_p1;
        trunc_ln1404_reg_541_pp0_iter1_reg <= trunc_ln1404_reg_541;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_agg_result_0_0_reg_143 <= ap_phi_reg_pp0_iter0_agg_result_0_0_reg_143;
        ap_phi_reg_pp0_iter1_pix_val_V_8_reg_181 <= ap_phi_reg_pp0_iter0_pix_val_V_8_reg_181;
        ap_phi_reg_pp0_iter1_pix_val_V_reg_162 <= ap_phi_reg_pp0_iter0_pix_val_V_reg_162;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_agg_result_0_0_reg_143 <= ap_phi_reg_pp0_iter1_agg_result_0_0_reg_143;
        ap_phi_reg_pp0_iter2_empty_reg_131 <= ap_phi_reg_pp0_iter1_empty_reg_131;
        ap_phi_reg_pp0_iter2_pix_val_V_8_reg_181 <= ap_phi_reg_pp0_iter1_pix_val_V_8_reg_181;
        ap_phi_reg_pp0_iter2_pix_val_V_reg_162 <= ap_phi_reg_pp0_iter1_pix_val_V_reg_162;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1072_fu_406_p2 == 1'd0) & (icmp_ln1428_reg_575 == 1'd0) & (icmp_ln1404_1_reg_547 == 1'd0))) begin
        icmp_ln1064_1_reg_586 <= icmp_ln1064_1_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        icmp_ln1064_1_reg_586_pp0_iter2_reg <= icmp_ln1064_1_reg_586;
        icmp_ln1072_reg_582_pp0_iter2_reg <= icmp_ln1072_reg_582;
        icmp_ln1404_1_reg_547_pp0_iter2_reg <= icmp_ln1404_1_reg_547_pp0_iter1_reg;
        icmp_ln1428_reg_575_pp0_iter2_reg <= icmp_ln1428_reg_575_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1428_reg_575 == 1'd0) & (icmp_ln1404_1_reg_547 == 1'd0))) begin
        icmp_ln1072_reg_582 <= icmp_ln1072_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1404_1_fu_262_p2 == 1'd0))) begin
        icmp_ln1428_reg_575 <= icmp_ln1428_fu_320_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if ((((empty_reg_131 == 1'd0) & (icmp_ln1072_reg_582_pp0_iter2_reg == 1'd1) & (icmp_ln1428_reg_575_pp0_iter2_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd0) & (icmp_ln1404_1_reg_547_pp0_iter2_reg == 1'd0)) | ((empty_reg_131 == 1'd0) & (icmp_ln1064_1_reg_586_pp0_iter2_reg == 1'd0) & (icmp_ln1428_reg_575_pp0_iter2_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd0) & (icmp_ln1404_1_reg_547_pp0_iter2_reg == 1'd0)))) begin
        ap_phi_mux_agg_result_0_0_phi_fu_148_p8 = 1'd0;
    end else if ((((((icmp_ln1064_1_reg_586_pp0_iter2_reg == 1'd1) & (icmp_ln1072_reg_582_pp0_iter2_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd0)) | ((empty_reg_131 == 1'd1) & (cmp57_fu_308_p2 == 1'd0))) | ((icmp_ln1428_reg_575_pp0_iter2_reg == 1'd1) & (cmp57_fu_308_p2 == 1'd0))) | ((cmp57_fu_308_p2 == 1'd0) & (icmp_ln1404_1_reg_547_pp0_iter2_reg == 1'd1)))) begin
        ap_phi_mux_agg_result_0_0_phi_fu_148_p8 = 1'd1;
    end else begin
        ap_phi_mux_agg_result_0_0_phi_fu_148_p8 = ap_phi_reg_pp0_iter3_agg_result_0_0_reg_143;
    end
end

always @ (*) begin
    if ((((icmp_ln1404_reg_537_pp0_iter1_reg == 1'd0) & (1'd0 == and_ln1404_reg_552_pp0_iter1_reg)) | ((icmp_ln1404_reg_537_pp0_iter1_reg == 1'd1) & (icmp_ln1404_1_reg_547_pp0_iter1_reg == 1'd0)))) begin
        ap_phi_mux_empty_phi_fu_135_p4 = vHatch;
    end else begin
        ap_phi_mux_empty_phi_fu_135_p4 = ap_phi_reg_pp0_iter2_empty_reg_131;
    end
end

always @ (*) begin
    if ((((empty_reg_131 == 1'd0) & (icmp_ln1072_reg_582_pp0_iter2_reg == 1'd1) & (icmp_ln1428_reg_575_pp0_iter2_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd0) & (icmp_ln1404_1_reg_547_pp0_iter2_reg == 1'd0)) | ((empty_reg_131 == 1'd0) & (icmp_ln1064_1_reg_586_pp0_iter2_reg == 1'd0) & (icmp_ln1428_reg_575_pp0_iter2_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd0) & (icmp_ln1404_1_reg_547_pp0_iter2_reg == 1'd0)))) begin
        ap_phi_mux_pix_val_V_8_phi_fu_184_p8 = conv_i_fu_456_p3;
    end else if ((((((icmp_ln1064_1_reg_586_pp0_iter2_reg == 1'd1) & (icmp_ln1072_reg_582_pp0_iter2_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd0)) | ((empty_reg_131 == 1'd1) & (cmp57_fu_308_p2 == 1'd0))) | ((icmp_ln1428_reg_575_pp0_iter2_reg == 1'd1) & (cmp57_fu_308_p2 == 1'd0))) | ((cmp57_fu_308_p2 == 1'd0) & (icmp_ln1404_1_reg_547_pp0_iter2_reg == 1'd1)))) begin
        ap_phi_mux_pix_val_V_8_phi_fu_184_p8 = conv_i10_fu_449_p3;
    end else begin
        ap_phi_mux_pix_val_V_8_phi_fu_184_p8 = ap_phi_reg_pp0_iter3_pix_val_V_8_reg_181;
    end
end

always @ (*) begin
    if ((((empty_reg_131 == 1'd0) & (icmp_ln1072_reg_582_pp0_iter2_reg == 1'd1) & (icmp_ln1428_reg_575_pp0_iter2_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd0) & (icmp_ln1404_1_reg_547_pp0_iter2_reg == 1'd0)) | ((empty_reg_131 == 1'd0) & (icmp_ln1064_1_reg_586_pp0_iter2_reg == 1'd0) & (icmp_ln1428_reg_575_pp0_iter2_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd0) & (icmp_ln1404_1_reg_547_pp0_iter2_reg == 1'd0)))) begin
        ap_phi_mux_pix_val_V_phi_fu_167_p8 = blkYuv_1_q0;
    end else if ((((((icmp_ln1064_1_reg_586_pp0_iter2_reg == 1'd1) & (icmp_ln1072_reg_582_pp0_iter2_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd0)) | ((empty_reg_131 == 1'd1) & (cmp57_fu_308_p2 == 1'd0))) | ((icmp_ln1428_reg_575_pp0_iter2_reg == 1'd1) & (cmp57_fu_308_p2 == 1'd0))) | ((cmp57_fu_308_p2 == 1'd0) & (icmp_ln1404_1_reg_547_pp0_iter2_reg == 1'd1)))) begin
        ap_phi_mux_pix_val_V_phi_fu_167_p8 = whiYuv_1_q0;
    end else begin
        ap_phi_mux_pix_val_V_phi_fu_167_p8 = ap_phi_reg_pp0_iter3_pix_val_V_reg_162;
    end
end

always @ (*) begin
    if (((icmp_ln1428_reg_575 == 1'd0) & (icmp_ln1404_1_reg_547 == 1'd0))) begin
        if ((icmp_ln1072_fu_406_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_phi_fu_125_p4 = add_ln885_3_fu_431_p2;
        end else if (((icmp_ln1064_1_fu_412_p2 == 1'd0) & (icmp_ln1072_fu_406_p2 == 1'd0))) begin
            ap_phi_mux_storemerge_phi_fu_125_p4 = sub_ln886_fu_418_p2;
        end else begin
            ap_phi_mux_storemerge_phi_fu_125_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_122;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_125_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        blkYuv_1_ce0 = 1'b1;
    end else begin
        blkYuv_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp15) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_ap_uint_10_s_fu_224_ap_ce = 1'b1;
    end else begin
        grp_reg_ap_uint_10_s_fu_224_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        whiYuv_1_ce0 = 1'b1;
    end else begin
        whiYuv_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1396_fu_202_p2 = (trunc_ln1396_fu_198_p1 + 14'd15);

assign add_ln1398_fu_238_p2 = (trunc_ln1398_fu_234_p1 + 14'd15);

assign add_ln1404_fu_268_p2 = ($signed(zext_ln1398_fu_230_p1) + $signed(17'd131071));

assign add_ln885_3_fu_431_p2 = (xCount_V_2 + 10'd1);

assign add_ln885_fu_366_p2 = (yCount_V_2 + 10'd1);

assign and_ln1404_fu_280_p2 = (icmp_ln1404_2_fu_274_p2 & icmp_ln1404_1_fu_262_p2);

assign and_ln1409_fu_361_p2 = (icmp_ln1404_1_reg_547 & icmp_ln1064_fu_355_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_222 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_228 = (((icmp_ln1404_fu_248_p2 == 1'd1) & (icmp_ln1404_1_fu_262_p2 == 1'd1)) | ((icmp_ln1404_fu_248_p2 == 1'd0) & (1'd1 == and_ln1404_fu_280_p2)));
end

always @ (*) begin
    ap_condition_232 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce));
end

always @ (*) begin
    ap_condition_239 = (((icmp_ln1404_reg_537_pp0_iter1_reg == 1'd0) & (1'd0 == and_ln1404_reg_552_pp0_iter1_reg)) | ((icmp_ln1404_reg_537_pp0_iter1_reg == 1'd1) & (icmp_ln1404_1_reg_547_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_253 = (((((icmp_ln1064_1_reg_586 == 1'd1) & (icmp_ln1072_reg_582 == 1'd0) & (cmp57_fu_308_p2 == 1'd1)) | ((ap_phi_mux_empty_phi_fu_135_p4 == 1'd1) & (cmp57_fu_308_p2 == 1'd1))) | ((icmp_ln1428_reg_575_pp0_iter1_reg == 1'd1) & (cmp57_fu_308_p2 == 1'd1))) | ((cmp57_fu_308_p2 == 1'd1) & (icmp_ln1404_1_reg_547_pp0_iter1_reg == 1'd1)));
end

always @ (*) begin
    ap_condition_274 = (((ap_phi_mux_empty_phi_fu_135_p4 == 1'd0) & (icmp_ln1072_reg_582 == 1'd1) & (icmp_ln1428_reg_575_pp0_iter1_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd1) & (icmp_ln1404_1_reg_547_pp0_iter1_reg == 1'd0)) | ((ap_phi_mux_empty_phi_fu_135_p4 == 1'd0) & (icmp_ln1064_1_reg_586 == 1'd0) & (icmp_ln1428_reg_575_pp0_iter1_reg == 1'd0) & (cmp57_fu_308_p2 == 1'd1) & (icmp_ln1404_1_reg_547_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_599 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1064_1_fu_412_p2 == 1'd1) & (icmp_ln1072_fu_406_p2 == 1'd0) & (icmp_ln1428_reg_575 == 1'd0) & (icmp_ln1404_1_reg_547 == 1'd0));
end

always @ (*) begin
    ap_condition_602 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln1072_fu_406_p2 == 1'd1) & (icmp_ln1428_reg_575 == 1'd0) & (icmp_ln1404_1_reg_547 == 1'd0)) | ((icmp_ln1064_1_fu_412_p2 == 1'd0) & (icmp_ln1428_reg_575 == 1'd0) & (icmp_ln1404_1_reg_547 == 1'd0))));
end

always @ (*) begin
    ap_condition_606 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1428_fu_320_p2 == 1'd1) & (icmp_ln1404_1_fu_262_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_93 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_agg_result_0_0_reg_143 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_reg_131 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_8_reg_181 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_reg_162 = 'bx;

assign ap_phi_reg_pp0_iter1_storemerge_reg_122 = 'bx;

assign ap_return_0 = select_ln1472_fu_511_p3;

assign ap_return_1 = ap_phi_mux_pix_val_V_phi_fu_167_p8;

assign ap_return_2 = ap_phi_mux_pix_val_V_8_phi_fu_184_p8;

assign blkYuv_1_address0 = zext_ln1474_fu_482_p1;

assign cmp57_fu_308_p2 = ((color == 8'd0) ? 1'b1 : 1'b0);

assign cmp59_fu_314_p2 = ((color == 8'd1) ? 1'b1 : 1'b0);

assign conv_i10_fu_449_p3 = ((cmp57_fu_308_p2[0:0] == 1'b1) ? 8'd255 : 8'd128);

assign conv_i_fu_456_p3 = ((cmp57_fu_308_p2[0:0] == 1'b1) ? 8'd0 : 8'd128);

assign grp_reg_ap_uint_10_s_fu_224_d = ($signed(trunc_ln_fu_208_p4) + $signed(10'd1023));

assign icmp_ln1064_1_fu_412_p2 = ((xCount_V_2 == grp_reg_ap_uint_10_s_fu_224_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln1064_fu_355_p2 = ((zext_ln1064_fu_351_p1 == ret_fu_341_p2) ? 1'b1 : 1'b0);

assign icmp_ln1072_fu_406_p2 = ((xCount_V_2 < grp_reg_ap_uint_10_s_fu_224_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln1404_1_fu_262_p2 = ((x == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1404_2_fu_274_p2 = ((zext_ln1404_fu_244_p1 == add_ln1404_fu_268_p2) ? 1'b1 : 1'b0);

assign icmp_ln1404_fu_248_p2 = ((y == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1428_fu_320_p2 = ((zext_ln1404_1_fu_258_p1 == sub29_fu_302_p2) ? 1'b1 : 1'b0);

assign or_ln1459_fu_494_p2 = (trunc_ln1404_reg_541_pp0_iter1_reg | cmp59_fu_314_p2);

assign or_ln1474_fu_470_p2 = (trunc_ln1404_reg_541_pp0_iter1_reg | cmp59_fu_314_p2);

assign ret_fu_341_p2 = ($signed(zext_ln1541_fu_338_p1) + $signed(11'd2047));

assign select_ln1459_1_fu_487_p3 = ((cmp59_fu_314_p2[0:0] == 1'b1) ? 2'd1 : 2'd2);

assign select_ln1459_fu_498_p3 = ((or_ln1459_fu_494_p2[0:0] == 1'b1) ? select_ln1459_1_fu_487_p3 : 2'd1);

assign select_ln1472_fu_511_p3 = ((ap_phi_mux_agg_result_0_0_phi_fu_148_p8[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln1474_1_fu_463_p3 = ((cmp59_fu_314_p2[0:0] == 1'b1) ? 2'd1 : 2'd2);

assign select_ln1474_fu_474_p3 = ((or_ln1474_fu_470_p2[0:0] == 1'b1) ? select_ln1474_1_fu_463_p3 : 2'd1);

assign sub29_fu_302_p2 = ($signed(zext_ln1396_fu_194_p1) + $signed(17'd131071));

assign sub_ln886_fu_418_p2 = (xCount_V_2 - grp_reg_ap_uint_10_s_fu_224_ap_return);

assign tmp_fu_286_p4 = {{add_ln1398_fu_238_p2[13:4]}};

assign trunc_ln1396_fu_198_p1 = width[13:0];

assign trunc_ln1398_fu_234_p1 = height[13:0];

assign trunc_ln1404_fu_254_p1 = x[0:0];

assign trunc_ln_fu_208_p4 = {{add_ln1396_fu_202_p2[13:4]}};

assign whiYuv_1_address0 = zext_ln1459_fu_506_p1;

assign zext_ln1064_fu_351_p1 = yCount_V_2;

assign zext_ln1396_fu_194_p1 = width;

assign zext_ln1398_fu_230_p1 = height;

assign zext_ln1404_1_fu_258_p1 = x;

assign zext_ln1404_fu_244_p1 = y;

assign zext_ln1459_fu_506_p1 = select_ln1459_fu_498_p3;

assign zext_ln1474_fu_482_p1 = select_ln1474_fu_474_p3;

assign zext_ln1541_fu_338_p1 = tmp_fu_286_p4;

endmodule //design_1_v_tpg_0_0_tpgPatternCrossHatch
